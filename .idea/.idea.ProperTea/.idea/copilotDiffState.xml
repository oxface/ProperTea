<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/doc/tech/deployment.mmd">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/doc/tech/deployment.mmd" />
              <option name="updatedContent" value="%% Deployment Diagram (Mermaid)&#10;flowchart TD&#10;    subgraph AzureContainerApps[&quot;Azure Container Apps Environment&quot;]&#10;        subgraph Portals&#10;            LandlordPortal[&quot;Landlord Portal (Web App)&quot;]&#10;            TenantPortal[&quot;Tenant Portal (Web App)&quot;]&#10;            ListingPortal[&quot;Listing Portal (Web App)&quot;]&#10;            SupportPortal[&quot;Support Portal (Web App)&quot;]&#10;        end&#10;        subgraph BFFs&#10;            LandlordBFF[&quot;Landlord BFF (Container App)&quot;]&#10;            TenantBFF[&quot;Tenant BFF (Container App)&quot;]&#10;            ListingBFF[&quot;Listing BFF (Container App)&quot;]&#10;            SupportBFF[&quot;Support BFF (Container App)&quot;]&#10;        end&#10;        APIGateway[&quot;API Gateway (YARP, Container App)&quot;]&#10;        subgraph CoreServices&#10;            UserManagement[&quot;User Management (Container App)&quot;]&#10;            Identity[&quot;Identity (Container App)&quot;]&#10;            Orchestrator[&quot;Workflow Orchestrator (Durable Functions)&quot;]&#10;            Organization[&quot;Organization Service (Container App)&quot;]&#10;            Property[&quot;Property Service (Container App)&quot;]&#10;            RentalObject[&quot;Rental Object Service (Container App)&quot;]&#10;            RentalContract[&quot;Rental Contract Service (Container App)&quot;]&#10;            Vacancies[&quot;Vacancies Service (Container App)&quot;]&#10;            TenantService[&quot;Tenant Service (Container App)&quot;]&#10;            ApplicationService[&quot;Application Service (Container App)&quot;]&#10;            OfferService[&quot;Offer Service (Container App)&quot;]&#10;            DocumentService[&quot;Document Management (Container App)&quot;]&#10;        end&#10;    end&#10;    AzureSQL[&quot;Azure SQL Database (per service)&quot;]&#10;    ServiceBus[&quot;Azure Service Bus&quot;]&#10;    BlobStorage[&quot;Azure Blob Storage&quot;]&#10;    AppInsights[&quot;Application Insights&quot;]&#10;    KeyVault[&quot;Azure Key Vault&quot;]&#10;    AzureADB2C[&quot;Azure AD B2C&quot;]&#10;&#10;    LandlordPortal--&gt;|HTTP|LandlordBFF&#10;    TenantPortal--&gt;|HTTP|TenantBFF&#10;    ListingPortal--&gt;|HTTP|ListingBFF&#10;    SupportPortal--&gt;|HTTP|SupportBFF&#10;    LandlordBFF--&gt;|HTTP|APIGateway&#10;    TenantBFF--&gt;|HTTP|APIGateway&#10;    ListingBFF--&gt;|HTTP|APIGateway&#10;    SupportBFF--&gt;|HTTP|APIGateway&#10;    APIGateway--&gt;|HTTP/gRPC|UserManagement&#10;    APIGateway--&gt;|HTTP/gRPC|Identity&#10;    APIGateway--&gt;|HTTP/gRPC|Orchestrator&#10;    APIGateway--&gt;|HTTP/gRPC|Organization&#10;    APIGateway--&gt;|HTTP/gRPC|Property&#10;    APIGateway--&gt;|HTTP/gRPC|RentalObject&#10;    APIGateway--&gt;|HTTP/gRPC|RentalContract&#10;    APIGateway--&gt;|HTTP/gRPC|Vacancies&#10;    APIGateway--&gt;|HTTP/gRPC|TenantService&#10;    APIGateway--&gt;|HTTP/gRPC|ApplicationService&#10;    APIGateway--&gt;|HTTP/gRPC|OfferService&#10;    APIGateway--&gt;|HTTP/gRPC|DocumentService&#10;    UserManagement--&gt;|DB|AzureSQL&#10;    Identity--&gt;|DB|AzureSQL&#10;    Orchestrator--&gt;|DB|AzureSQL&#10;    Organization--&gt;|DB|AzureSQL&#10;    Property--&gt;|DB|AzureSQL&#10;    RentalObject--&gt;|DB|AzureSQL&#10;    RentalContract--&gt;|DB|AzureSQL&#10;    Vacancies--&gt;|DB|AzureSQL&#10;    TenantService--&gt;|DB|AzureSQL&#10;    ApplicationService--&gt;|DB|AzureSQL&#10;    OfferService--&gt;|DB|AzureSQL&#10;    DocumentService--&gt;|DB|AzureSQL&#10;    Orchestrator--&gt;|Events|ServiceBus&#10;    Property--&gt;|Events|ServiceBus&#10;    RentalObject--&gt;|Events|ServiceBus&#10;    RentalContract--&gt;|Events|ServiceBus&#10;    ApplicationService--&gt;|Events|ServiceBus&#10;    OfferService--&gt;|Events|ServiceBus&#10;    DocumentService--&gt;|Blob|BlobStorage&#10;    AllApps[&quot;All Apps&quot;]--&gt;|Logs|AppInsights&#10;    AllApps--&gt;|Secrets|KeyVault&#10;    Identity--&gt;|OAuth2|AzureADB2C&#10;    classDef external fill:#f9f,stroke:#333,stroke-width:2px;&#10;    class AzureSQL,ServiceBus,BlobStorage,AppInsights,KeyVault,AzureADB2C external;&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/doc/tech/service-interaction.mmd">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/doc/tech/service-interaction.mmd" />
              <option name="updatedContent" value="%% Service Interaction Diagram (Mermaid)&#10;sequenceDiagram&#10;    participant LandlordPortal&#10;    participant LandlordBFF&#10;    participant APIGateway&#10;    participant Orchestrator&#10;    participant Organization&#10;    participant UserManagement&#10;    participant Identity&#10;    participant Property&#10;    participant RentalObject&#10;    participant RentalContract&#10;    participant Vacancies&#10;    participant ApplicationService&#10;    participant OfferService&#10;    participant DocumentService&#10;    participant ServiceBus&#10;    participant BlobStorage&#10;&#10;    LandlordPortal-&gt;&gt;LandlordBFF: HTTP (REST)&#10;    LandlordBFF-&gt;&gt;APIGateway: HTTP (REST)&#10;    APIGateway-&gt;&gt;Organization: HTTP/gRPC&#10;    APIGateway-&gt;&gt;UserManagement: HTTP/gRPC&#10;    APIGateway-&gt;&gt;Identity: HTTP/gRPC&#10;    APIGateway-&gt;&gt;Orchestrator: HTTP/gRPC&#10;    APIGateway-&gt;&gt;Property: HTTP/gRPC&#10;    APIGateway-&gt;&gt;RentalObject: HTTP/gRPC&#10;    APIGateway-&gt;&gt;RentalContract: HTTP/gRPC&#10;    APIGateway-&gt;&gt;Vacancies: HTTP/gRPC&#10;    APIGateway-&gt;&gt;ApplicationService: HTTP/gRPC&#10;    APIGateway-&gt;&gt;OfferService: HTTP/gRPC&#10;    APIGateway-&gt;&gt;DocumentService: HTTP/gRPC&#10;    Orchestrator-&gt;&gt;Organization: HTTP/gRPC (orchestrated calls)&#10;    Orchestrator-&gt;&gt;UserManagement: HTTP/gRPC (orchestrated calls)&#10;    Orchestrator-&gt;&gt;Identity: HTTP/gRPC (orchestrated calls)&#10;    Orchestrator-&gt;&gt;Property: HTTP/gRPC (orchestrated calls)&#10;    Orchestrator-&gt;&gt;RentalObject: HTTP/gRPC (orchestrated calls)&#10;    Orchestrator-&gt;&gt;RentalContract: HTTP/gRPC (orchestrated calls)&#10;    Orchestrator-&gt;&gt;ApplicationService: HTTP/gRPC (orchestrated calls)&#10;    Orchestrator-&gt;&gt;OfferService: HTTP/gRPC (orchestrated calls)&#10;    Property--&gt;&gt;ServiceBus: Event (PropertyChanged)&#10;    RentalObject--&gt;&gt;ServiceBus: Event (RentalObjectChanged)&#10;    RentalContract--&gt;&gt;ServiceBus: Event (ContractChanged)&#10;    ApplicationService--&gt;&gt;ServiceBus: Event (ApplicationChanged)&#10;    OfferService--&gt;&gt;ServiceBus: Event (OfferChanged)&#10;    DocumentService--&gt;&gt;BlobStorage: Store/Retrieve Documents&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/ProperTea.Gateway/appsettings.json">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/ProperTea.Gateway/appsettings.json" />
              <option name="originalContent" value="{&#10;  &quot;Logging&quot;: {&#10;    &quot;LogLevel&quot;: {&#10;      &quot;Default&quot;: &quot;Information&quot;,&#10;      &quot;Microsoft.AspNetCore&quot;: &quot;Warning&quot;,&#10;      &quot;Yarp&quot;: &quot;Information&quot;&#10;    }&#10;  },&#10;  &quot;Authentication&quot;: {&#10;    &quot;Authority&quot;: &quot;https://your-auth-server.com&quot;,&#10;    &quot;Audience&quot;: &quot;propertea-api&quot;&#10;  },&#10;  &quot;Cors&quot;: {&#10;    &quot;AllowedOrigins&quot;: [&#10;      &quot;https://localhost:6001&quot;,&#10;      &quot;https://localhost:6002&quot;,&#10;      &quot;https://localhost:6003&quot;,&#10;      &quot;https://localhost:6004&quot;&#10;    ]&#10;  },&#10;  &quot;RateLimiting&quot;: {&#10;    &quot;GlobalLimit&quot;: 100,&#10;    &quot;WindowMinutes&quot;: 1&#10;  },&#10;  &quot;ReverseProxy&quot;: {&#10;    &quot;Routes&quot;: {&#10;      &quot;organization-route&quot;: {&#10;        &quot;ClusterId&quot;: &quot;organization-cluster&quot;,&#10;        &quot;Match&quot;: {&#10;          &quot;Path&quot;: &quot;/api/organizations/{**catch-all}&quot;&#10;        },&#10;        &quot;Transforms&quot;: [&#10;          { &quot;PathPattern&quot;: &quot;/api/organizations/{**catch-all}&quot; }&#10;        ]&#10;      },&#10;      &quot;user-management-route&quot;: {&#10;        &quot;ClusterId&quot;: &quot;user-management-cluster&quot;,&#10;        &quot;Match&quot;: {&#10;          &quot;Path&quot;: &quot;/api/users/{**catch-all}&quot;&#10;        },&#10;        &quot;Transforms&quot;: [&#10;          { &quot;PathPattern&quot;: &quot;/api/users/{**catch-all}&quot; }&#10;        ]&#10;      },&#10;      &quot;identity-route&quot;: {&#10;        &quot;ClusterId&quot;: &quot;identity-cluster&quot;,&#10;        &quot;Match&quot;: {&#10;          &quot;Path&quot;: &quot;/api/identities/{**catch-all}&quot;&#10;        },&#10;        &quot;Transforms&quot;: [&#10;          { &quot;PathPattern&quot;: &quot;/api/identities/{**catch-all}&quot; }&#10;        ]&#10;      },&#10;      &quot;workflow-orchestrator-route&quot;: {&#10;        &quot;ClusterId&quot;: &quot;workflow-orchestrator-cluster&quot;,&#10;        &quot;Match&quot;: {&#10;          &quot;Path&quot;: &quot;/api/orchestrators/{**catch-all}&quot;&#10;        },&#10;        &quot;Transforms&quot;: [&#10;          { &quot;PathPattern&quot;: &quot;/api/{**catch-all}&quot; }&#10;        ]&#10;      },&#10;      &quot;workflow-route&quot;: {&#10;        &quot;ClusterId&quot;: &quot;workflow-orchestrator-cluster&quot;,&#10;        &quot;Match&quot;: {&#10;          &quot;Path&quot;: &quot;/api/workflows/{**catch-all}&quot;&#10;        },&#10;        &quot;Transforms&quot;: [&#10;          { &quot;PathPattern&quot;: &quot;/api/workflows/{**catch-all}&quot; }&#10;        ]&#10;      },&#10;      &quot;property-route&quot;: {&#10;        &quot;ClusterId&quot;: &quot;property-cluster&quot;,&#10;        &quot;Match&quot;: {&#10;          &quot;Path&quot;: &quot;/api/properties/{**catch-all}&quot;&#10;        },&#10;        &quot;Transforms&quot;: [&#10;          { &quot;PathPattern&quot;: &quot;/api/properties/{**catch-all}&quot; }&#10;        ]&#10;      },&#10;      &quot;rental-object-route&quot;: {&#10;        &quot;ClusterId&quot;: &quot;rental-object-cluster&quot;,&#10;        &quot;Match&quot;: {&#10;          &quot;Path&quot;: &quot;/api/rental-objects/{**catch-all}&quot;&#10;        },&#10;        &quot;Transforms&quot;: [&#10;          { &quot;PathPattern&quot;: &quot;/api/rental-objects/{**catch-all}&quot; }&#10;        ]&#10;      },&#10;      &quot;rental-contract-route&quot;: {&#10;        &quot;ClusterId&quot;: &quot;rental-contract-cluster&quot;,&#10;        &quot;Match&quot;: {&#10;          &quot;Path&quot;: &quot;/api/rental-contracts/{**catch-all}&quot;&#10;        },&#10;        &quot;Transforms&quot;: [&#10;          { &quot;PathPattern&quot;: &quot;/api/rental-contracts/{**catch-all}&quot; }&#10;        ]&#10;      },&#10;      &quot;vacancies-route&quot;: {&#10;        &quot;ClusterId&quot;: &quot;vacancies-cluster&quot;,&#10;        &quot;Match&quot;: {&#10;          &quot;Path&quot;: &quot;/api/vacancies/{**catch-all}&quot;&#10;        },&#10;        &quot;Transforms&quot;: [&#10;          { &quot;PathPattern&quot;: &quot;/api/vacancies/{**catch-all}&quot; }&#10;        ]&#10;      },&#10;      &quot;tenant-route&quot;: {&#10;        &quot;ClusterId&quot;: &quot;tenant-cluster&quot;,&#10;        &quot;Match&quot;: {&#10;          &quot;Path&quot;: &quot;/api/tenants/{**catch-all}&quot;&#10;        },&#10;        &quot;Transforms&quot;: [&#10;          { &quot;PathPattern&quot;: &quot;/api/tenants/{**catch-all}&quot; }&#10;        ]&#10;      },&#10;      &quot;application-route&quot;: {&#10;        &quot;ClusterId&quot;: &quot;application-cluster&quot;,&#10;        &quot;Match&quot;: {&#10;          &quot;Path&quot;: &quot;/api/applications/{**catch-all}&quot;&#10;        },&#10;        &quot;Transforms&quot;: [&#10;          { &quot;PathPattern&quot;: &quot;/api/applications/{**catch-all}&quot; }&#10;        ]&#10;      }&#10;    },&#10;    &quot;Clusters&quot;: {&#10;      &quot;organization-cluster&quot;: {&#10;        &quot;Destinations&quot;: {&#10;          &quot;organization-destination&quot;: {&#10;            &quot;Address&quot;: &quot;https://organization-api&quot;&#10;          }&#10;        }&#10;      },&#10;      &quot;user-management-cluster&quot;: {&#10;        &quot;Destinations&quot;: {&#10;          &quot;user-management-destination&quot;: {&#10;            &quot;Address&quot;: &quot;https://user-management-api&quot;&#10;          }&#10;        }&#10;      },&#10;      &quot;identity-cluster&quot;: {&#10;        &quot;Destinations&quot;: {&#10;          &quot;identity-destination&quot;: {&#10;            &quot;Address&quot;: &quot;https://identity-api&quot;&#10;          }&#10;        }&#10;      },&#10;      &quot;workflow-orchestrator-cluster&quot;: {&#10;        &quot;Destinations&quot;: {&#10;          &quot;workflow-orchestrator-destination&quot;: {&#10;            &quot;Address&quot;: &quot;https://workflow-orchestrator&quot;&#10;          }&#10;        }&#10;      },&#10;      &quot;property-cluster&quot;: {&#10;        &quot;Destinations&quot;: {&#10;          &quot;property-destination&quot;: {&#10;            &quot;Address&quot;: &quot;https://property-api&quot;&#10;          }&#10;        }&#10;      },&#10;      &quot;rental-object-cluster&quot;: {&#10;        &quot;Destinations&quot;: {&#10;          &quot;rental-object-destination&quot;: {&#10;            &quot;Address&quot;: &quot;https://rental-object-api&quot;&#10;          }&#10;        }&#10;      },&#10;      &quot;rental-contract-cluster&quot;: {&#10;        &quot;Destinations&quot;: {&#10;          &quot;rental-contract-destination&quot;: {&#10;            &quot;Address&quot;: &quot;https://rental-contract-api&quot;&#10;          }&#10;        }&#10;      },&#10;      &quot;vacancies-cluster&quot;: {&#10;        &quot;Destinations&quot;: {&#10;          &quot;vacancies-destination&quot;: {&#10;            &quot;Address&quot;: &quot;https://vacancies-api&quot;&#10;          }&#10;        }&#10;      },&#10;      &quot;tenant-cluster&quot;: {&#10;        &quot;Destinations&quot;: {&#10;          &quot;tenant-destination&quot;: {&#10;            &quot;Address&quot;: &quot;https://tenant-api&quot;&#10;          }&#10;        }&#10;      },&#10;      &quot;application-cluster&quot;: {&#10;        &quot;Destinations&quot;: {&#10;          &quot;application-destination&quot;: {&#10;            &quot;Address&quot;: &quot;https://application-api&quot;&#10;          }&#10;        }&#10;      }&#10;    }&#10;  },&#10;  &quot;AllowedHosts&quot;: &quot;*&quot;&#10;}&#10;" />
              <option name="updatedContent" value="{&#10;  &quot;Logging&quot;: {&#10;    &quot;LogLevel&quot;: {&#10;      &quot;Default&quot;: &quot;Information&quot;,&#10;      &quot;Microsoft.AspNetCore&quot;: &quot;Warning&quot;,&#10;      &quot;Yarp&quot;: &quot;Information&quot;&#10;    }&#10;  },&#10;  &quot;Authentication&quot;: {&#10;    &quot;Authority&quot;: &quot;https://your-auth-server.com&quot;,&#10;    &quot;Audience&quot;: &quot;propertea-api&quot;&#10;  },&#10;  &quot;Cors&quot;: {&#10;    &quot;AllowedOrigins&quot;: [&#10;      &quot;https://localhost:6001&quot;,&#10;      &quot;https://localhost:6002&quot;,&#10;      &quot;https://localhost:6003&quot;,&#10;      &quot;https://localhost:6004&quot;&#10;    ]&#10;  },&#10;  &quot;RateLimiting&quot;: {&#10;    &quot;GlobalLimit&quot;: 100,&#10;    &quot;WindowMinutes&quot;: 1&#10;  },&#10;  &quot;ReverseProxy&quot;: {&#10;    &quot;Routes&quot;: {&#10;      &quot;organization-route&quot;: {&#10;        &quot;ClusterId&quot;: &quot;organization-cluster&quot;,&#10;        &quot;Match&quot;: {&#10;          &quot;Path&quot;: &quot;/api/organizations/{**catch-all}&quot;&#10;        },&#10;        &quot;Transforms&quot;: [&#10;          { &quot;PathPattern&quot;: &quot;/api/organizations/{**catch-all}&quot; }&#10;        ]&#10;      },&#10;      &quot;user-management-route&quot;: {&#10;        &quot;ClusterId&quot;: &quot;user-management-cluster&quot;,&#10;        &quot;Match&quot;: {&#10;          &quot;Path&quot;: &quot;/api/users/{**catch-all}&quot;&#10;        },&#10;        &quot;Transforms&quot;: [&#10;          { &quot;PathPattern&quot;: &quot;/api/users/{**catch-all}&quot; }&#10;        ]&#10;      },&#10;      &quot;identity-route&quot;: {&#10;        &quot;ClusterId&quot;: &quot;identity-cluster&quot;,&#10;        &quot;Match&quot;: {&#10;          &quot;Path&quot;: &quot;/api/identities/{**catch-all}&quot;&#10;        },&#10;        &quot;Transforms&quot;: [&#10;          { &quot;PathPattern&quot;: &quot;/api/identities/{**catch-all}&quot; }&#10;        ]&#10;      },&#10;      &quot;workflow-orchestrator-route&quot;: {&#10;        &quot;ClusterId&quot;: &quot;workflow-orchestrator-cluster&quot;,&#10;        &quot;Match&quot;: {&#10;          &quot;Path&quot;: &quot;/api/orchestrators/{**catch-all}&quot;&#10;        },&#10;        &quot;Transforms&quot;: [&#10;          { &quot;PathPattern&quot;: &quot;/api/{**catch-all}&quot; }&#10;        ]&#10;      },&#10;      &quot;workflow-route&quot;: {&#10;        &quot;ClusterId&quot;: &quot;workflow-orchestrator-cluster&quot;,&#10;        &quot;Match&quot;: {&#10;          &quot;Path&quot;: &quot;/api/workflows/{**catch-all}&quot;&#10;        },&#10;        &quot;Transforms&quot;: [&#10;          { &quot;PathPattern&quot;: &quot;/api/workflows/{**catch-all}&quot; }&#10;        ]&#10;      },&#10;      &quot;property-route&quot;: {&#10;        &quot;ClusterId&quot;: &quot;property-cluster&quot;,&#10;        &quot;Match&quot;: {&#10;          &quot;Path&quot;: &quot;/api/properties/{**catch-all}&quot;&#10;        },&#10;        &quot;Transforms&quot;: [&#10;          { &quot;PathPattern&quot;: &quot;/api/properties/{**catch-all}&quot; }&#10;        ]&#10;      },&#10;      &quot;rental-object-route&quot;: {&#10;        &quot;ClusterId&quot;: &quot;rental-object-cluster&quot;,&#10;        &quot;Match&quot;: {&#10;          &quot;Path&quot;: &quot;/api/rental-objects/{**catch-all}&quot;&#10;        },&#10;        &quot;Transforms&quot;: [&#10;          { &quot;PathPattern&quot;: &quot;/api/rental-objects/{**catch-all}&quot; }&#10;        ]&#10;      },&#10;      &quot;rental-contract-route&quot;: {&#10;        &quot;ClusterId&quot;: &quot;rental-contract-cluster&quot;,&#10;        &quot;Match&quot;: {&#10;          &quot;Path&quot;: &quot;/api/rental-contracts/{**catch-all}&quot;&#10;        },&#10;        &quot;Transforms&quot;: [&#10;          { &quot;PathPattern&quot;: &quot;/api/rental-contracts/{**catch-all}&quot; }&#10;        ]&#10;      },&#10;      &quot;vacancies-route&quot;: {&#10;        &quot;ClusterId&quot;: &quot;vacancies-cluster&quot;,&#10;        &quot;Match&quot;: {&#10;          &quot;Path&quot;: &quot;/api/vacancies/{**catch-all}&quot;&#10;        },&#10;        &quot;Transforms&quot;: [&#10;          { &quot;PathPattern&quot;: &quot;/api/vacancies/{**catch-all}&quot; }&#10;        ]&#10;      },&#10;      &quot;tenant-route&quot;: {&#10;        &quot;ClusterId&quot;: &quot;tenant-cluster&quot;,&#10;        &quot;Match&quot;: {&#10;          &quot;Path&quot;: &quot;/api/tenants/{**catch-all}&quot;&#10;        },&#10;        &quot;Transforms&quot;: [&#10;          { &quot;PathPattern&quot;: &quot;/api/tenants/{**catch-all}&quot; }&#10;        ]&#10;      },&#10;      &quot;application-route&quot;: {&#10;        &quot;ClusterId&quot;: &quot;application-cluster&quot;,&#10;        &quot;Match&quot;: {&#10;          &quot;Path&quot;: &quot;/api/applications/{**catch-all}&quot;&#10;        },&#10;        &quot;Transforms&quot;: [&#10;          { &quot;PathPattern&quot;: &quot;/api/applications/{**catch-all}&quot; }&#10;        ]&#10;      }&#10;    },&#10;    &quot;Clusters&quot;: {&#10;      &quot;organization-cluster&quot;: {&#10;        &quot;Destinations&quot;: {&#10;          &quot;organization-destination&quot;: {&#10;            &quot;Address&quot;: &quot;https://organization-api&quot;&#10;          }&#10;        }&#10;      },&#10;      &quot;user-management-cluster&quot;: {&#10;        &quot;Destinations&quot;: {&#10;          &quot;user-management-destination&quot;: {&#10;            &quot;Address&quot;: &quot;https://user-management-api&quot;&#10;          }&#10;        }&#10;      },&#10;      &quot;identity-cluster&quot;: {&#10;        &quot;Destinations&quot;: {&#10;          &quot;identity-destination&quot;: {&#10;            &quot;Address&quot;: &quot;https://identity-api&quot;&#10;          }&#10;        }&#10;      },&#10;      &quot;workflow-orchestrator-cluster&quot;: {&#10;        &quot;Destinations&quot;: {&#10;          &quot;workflow-orchestrator-destination&quot;: {&#10;            &quot;Address&quot;: &quot;https://workflow-orchestrator&quot;&#10;          }&#10;        }&#10;      },&#10;      &quot;property-cluster&quot;: {&#10;        &quot;Destinations&quot;: {&#10;          &quot;property-destination&quot;: {&#10;            &quot;Address&quot;: &quot;https://property-api&quot;&#10;          }&#10;        }&#10;      },&#10;      &quot;rental-object-cluster&quot;: {&#10;        &quot;Destinations&quot;: {&#10;          &quot;rental-object-destination&quot;: {&#10;            &quot;Address&quot;: &quot;https://rental-object-api&quot;&#10;          }&#10;        }&#10;      },&#10;      &quot;rental-contract-cluster&quot;: {&#10;        &quot;Destinations&quot;: {&#10;          &quot;rental-contract-destination&quot;: {&#10;            &quot;Address&quot;: &quot;https://rental-contract-api&quot;&#10;          }&#10;        }&#10;      },&#10;      &quot;vacancies-cluster&quot;: {&#10;        &quot;Destinations&quot;: {&#10;          &quot;vacancies-destination&quot;: {&#10;            &quot;Address&quot;: &quot;https://vacancies-api&quot;&#10;          }&#10;        }&#10;      },&#10;      &quot;tenant-cluster&quot;: {&#10;        &quot;Destinations&quot;: {&#10;          &quot;tenant-destination&quot;: {&#10;            &quot;Address&quot;: &quot;https://tenant-api&quot;&#10;          }&#10;        }&#10;      },&#10;      &quot;application-cluster&quot;: {&#10;        &quot;Destinations&quot;: {&#10;          &quot;application-destination&quot;: {&#10;            &quot;Address&quot;: &quot;https://application-api&quot;&#10;          }&#10;        }&#10;      }&#10;    }&#10;  },&#10;  &quot;AllowedHosts&quot;: &quot;*&quot;&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>